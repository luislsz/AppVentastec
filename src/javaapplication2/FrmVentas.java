/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDPage;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class FrmVentas extends javax.swing.JFrame implements Printable, ItfFrmVentas {

    private static List<DetalleVenta> ldv = new LinkedList<>();
    private String codigoFactura = "";
    private static final String mostarprodsql = "Select nombre from producto";
    private static final String mostarnombresql = "Select cedula from cliente";
    private Preferences preferences = Preferences.userNodeForPackage(Preferences.class);

    private static final String mensaje1 = "debe registrar codigo factura y consignacion";
    private static final String mensaje2 = "limite de inventario excedido";
    private static final String mensaje3 = "unidades de producto en minimo revise el stock";

    @Override
    public void setLdv(List<DetalleVenta> ldv) {
        FrmVentas.ldv = ldv;
    }

    /**
     * Creates new form FrmVentas
     */
    public FrmVentas() {
        initComponents();
        carga();
    }

    @Override
    public void carga() {
        this.getContentPane().setBackground(Color.WHITE);
        AutoCompleteDecorator.decorate(cmbidproducto);
        String verdadero = preferences.get("cproducto2", "");
        lblcliente.setText(verdadero);
        listprod hy = new listprod();
        hy.start();
    }

    private class listprod extends Thread {

        public listprod() {
        }

        @Override
        public void run() {
            try {
                if (Basededatos.conectar() != null) {
                    try {

                        Statement ps = Basededatos.conn.createStatement();
                        ResultSet rs = ps.executeQuery(mostarprodsql);
                        while (rs.next()) {
                            cmbidproducto.addItem(rs.getString("nombre"));
                        }

                        //la lista
                    } catch (SQLException ew) {
                        System.out.println(ew);
                    } finally {
                        Basededatos.desconectar();
                    }
                }
                try {
                    this.stop();

                } catch (Exception qza) {
                    Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, qza);
                }

            } catch (Exception tr) {
                Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, tr);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbidproducto = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtcodigofactura = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtcantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtconsignacioncliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        lblcliente = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        lbltotal = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ventas");
        setEnabled(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Producto:");
        jLabel1.setDoubleBuffered(true);

        cmbidproducto.setDoubleBuffered(true);
        cmbidproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmbidproductoKeyTyped(evt);
            }
        });

        jLabel2.setText("CodigoFactura:");
        jLabel2.setDoubleBuffered(true);

        txtcodigofactura.setDoubleBuffered(true);
        txtcodigofactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodigofacturaKeyTyped(evt);
            }
        });

        jLabel3.setText("Cantidad:");
        jLabel3.setDoubleBuffered(true);

        txtcantidad.setText("0");
        txtcantidad.setDoubleBuffered(true);
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });

        jLabel4.setText("ConsignacionCliente:");
        jLabel4.setDoubleBuffered(true);

        txtconsignacioncliente.setText("0.0");
        txtconsignacioncliente.setDoubleBuffered(true);
        txtconsignacioncliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconsignacionclienteKeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/shoppingcart_77905.png"))); // NOI18N
        jButton1.setText("Agregar");
        jButton1.setToolTipText("Se Agregaran Unidades Al Carrito Ventas");
        jButton1.setDoubleBuffered(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/transfer_77884.png"))); // NOI18N
        jButton2.setText("Inventario");
        jButton2.setToolTipText("Se Procedera A Ir Al Formulario Inventario");
        jButton2.setDoubleBuffered(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextPane1.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTextPane1);

        jLabel8.setText("nombre/cantidad/subtotal.");
        jLabel8.setDoubleBuffered(true);

        jTextPane2.setDoubleBuffered(true);
        jScrollPane2.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setText("Cliente:");
        jLabel5.setDoubleBuffered(true);

        lblcliente.setText("0000000000");
        lblcliente.setDoubleBuffered(true);
        lblcliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblclienteKeyTyped(evt);
            }
        });

        jLabel7.setText("Total:");
        jLabel7.setDoubleBuffered(true);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cashregister_106599.png"))); // NOI18N
        jButton3.setText("Pagar");
        jButton3.setDoubleBuffered(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lbltotal.setText("0.0");
        lbltotal.setDoubleBuffered(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/archives_78380.png"))); // NOI18N
        jButton4.setText("Actualizar");
        jButton4.setToolTipText("Se Procedera A Actualizar Carrito");
        jButton4.setDoubleBuffered(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbidproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtcodigofactura, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtconsignacioncliente, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblcliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotal)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtcodigofactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtconsignacioncliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbidproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblcliente)
                    .addComponent(jLabel7)
                    .addComponent(jButton3)
                    .addComponent(lbltotal))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try {
            AddVenta aV = new AddVenta();
            aV.start();
        } catch (Exception e) {
            System.out.println(e);
        } finally {
            try {
                PrinterJob g = PrinterJob.getPrinterJob();
                g.setPrintable((Printable) this);
                boolean gl = g.printDialog();
                if (gl) {
                    g.print();
                }
            } catch (PrinterException pex) {
                System.out.println(pex);

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int idproducto = 0;
        int numstock = 0;
        double total = 0.0;
        double subtotal = 0.0;
        double valorunitario = 0.0;
        String nombreprod = cmbidproducto.getSelectedItem().toString();

        String sqlnom = "Select idproducto,stock from Producto where nombre ='" + nombreprod + "'";
        String sqlidproducto = "Select valor from Producto where  idproducto=";
        int cant = Integer.parseInt(txtcantidad.getText());

        if (Basededatos.conectar()
                != null) {
            try {
                Statement ps = Basededatos.conn.createStatement();
                ResultSet rs = ps.executeQuery(sqlnom);

                while (rs.next()) {
                    idproducto = rs.getInt("idProducto");
                    numstock = rs.getInt("stock");
                }
                try {
                    String sql2 = sqlidproducto + idproducto;

                    Statement ps2 = Basededatos.conn.createStatement();
                    ResultSet rs2 = ps.executeQuery(sql2);

                    while (rs2.next()) {

                        valorunitario = rs2.getDouble("valor");
                    }

                    Basededatos.desconectar();
                    //la lista
                } catch (SQLException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                }
                Basededatos.desconectar();
                //la lista
            } catch (SQLException ex) {
                Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                Basededatos.desconectar();
            }
        }
        codigoFactura = txtcodigofactura.getText();

        if ("".equals(codigoFactura) || (txtconsignacioncliente.getText() == "" || txtconsignacioncliente.getText() == null)) {

            JOptionPane.showMessageDialog(null, mensaje1, "error", 0);
        } else {
            Object[] dato1 = null;
            if (numstock <= 0) {
                JOptionPane.showMessageDialog(null, mensaje2, "error", 0);
            } else if (numstock <= 15) {
                JOptionPane.showMessageDialog(null, mensaje3, "error", 2);

                subtotal = (valorunitario * cant);
                dato1 = new Object[]{
                    nombreprod,
                    cant,
                    subtotal};
                jTextPane2.setText(jTextPane2.getText() + nombreprod
                        + "/" + cant
                        + "/" + subtotal + "\n");
                total = Double.parseDouble(lbltotal.getText()) + subtotal;
                lbltotal.setText(String.valueOf(total));
                //////////////////////////////////////////////////////////
                DetalleVenta dc = new DetalleVenta(cant, subtotal, idproducto, nombreprod, codigoFactura);
                ldv.add(dc);
                /////////////////////////////////////////////////////////////
            } else {

                subtotal = (valorunitario * cant);
                dato1 = new Object[]{
                    nombreprod,
                    cant,
                    subtotal};
                jTextPane2.setText(jTextPane2.getText() + nombreprod
                        + "/" + cant
                        + "/" + subtotal + "\n");
                total = Double.parseDouble(lbltotal.getText()) + subtotal;
                lbltotal.setText(String.valueOf(total));
                //////////////////////////////////////////////////////////
                DetalleVenta dc = new DetalleVenta(cant, subtotal, idproducto, nombreprod, codigoFactura);
                ldv.add(dc);
                /////////////////////////////////////////////////////////////
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        FrmInventario fpd = new FrmInventario();
        fpd.setEnabled(true);
        fpd.setVisible(true);
        fpd.setLdvfinal(ldv);
        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtcodigofacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigofacturaKeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_txtcodigofacturaKeyTyped

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        // TODO add your handling code here:
        evalnum(evt);
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void txtconsignacionclienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconsignacionclienteKeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_txtconsignacionclienteKeyTyped

    private void cmbidproductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbidproductoKeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_cmbidproductoKeyTyped

    private void lblclienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblclienteKeyTyped
        // TODO add your handling code here:
        evalnum(evt);
    }//GEN-LAST:event_lblclienteKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String fs = null;
        double total = 0.0;
        for (DetalleVenta c : ldv) {
            jTextPane2.setText(jTextPane2.getText() + c.getNombreproducto()
                    + "/" + c.getCantidadDetalle()
                    + "/" + c.getSubtotal() + "\n");
            fs = c.getVentas_codigoVentas();
            total = total + c.getSubtotal();
        }
        codigoFactura = fs;
        txtcodigofactura.setText(fs);
        lbltotal.setText(String.valueOf(total));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        FrmPrincipal frd = new FrmPrincipal();
        frd.setEnabled(true);
        frd.setVisible(true);
        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosed
    @Override
    public void evalnum(java.awt.event.KeyEvent tyea) {
        char c = tyea.getKeyChar();
        if ((c < '0' || c > '9')) {
            tyea.consume();
        }
    }

    @Override
    public void evaltextYnum(java.awt.event.KeyEvent tyea) {
        char c = tyea.getKeyChar();
        if ((c < '0' || c > '9') & (c < 'A' || c > 'Z') & (c < 'a' || c > 'z') & (c < '.' || c > '.') & (c < ' ' || c > ' ')) {
            tyea.consume();
        }
    }

    @Override
    public void evalnumdec(java.awt.event.KeyEvent ohynu) {
        char c = ohynu.getKeyChar();
        if ((c < '0' || c > '9') & (c < '.' || c > '.')) {
            ohynu.consume();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbidproducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JLabel lblcliente;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtcodigofactura;
    private javax.swing.JTextField txtconsignacioncliente;
    // End of variables declaration//GEN-END:variables

    private static final PDPage page = new PDPage();

    @Override
    public int print(Graphics graf, PageFormat pagefor, int Index) throws PrinterException {
        if (Index > 0) {
            return NO_SUCH_PAGE;
        }
        Graphics2D ar = (Graphics2D) graf;
        ar.translate(pagefor.getImageableX() * 50, pagefor.getImageableY() * 50);
        ar.scale(1.5, 1.5);
        jPanel1.printAll(graf);
        return PAGE_EXISTS;

    }

    private interface ItfAddVenta {

        void run();
    }

    private class AddVenta extends Thread implements ItfAddVenta {

        private static final String sqlupdateproducto = "update producto set  stock=stock-? where idproducto=?";
        private static final String sqlinsetvdetalleventas = "insert into detalleVenta(cantidadDetalle,subtotal,producto_idproducto,ventas_codigoVentas) values(?,?,?,?)";
        private static final String sqlinsertventas = "insert into ventas(codigoVentas,total,fechaVenta,consignacionCliente ,devolucionRestantes,cliente_idcliente) values(?,?,?,?,?,?)";

        @Override
        public void run() {
            String alojf = preferences.get("cproducto2", "");
            Md5 desencrip = new Md5();
            String cript = desencrip.getEncoddedString(alojf);
            int idcliente = 0;
            if (Basededatos.conectar() != null) {
                try {
                    String sql = "Select idcliente from cliente where cedula ='" + cript + "'";

                    Statement ps = Basededatos.conn.createStatement();
                    ResultSet rs = ps.executeQuery(sql);

                    while (rs.next()) {

                        idcliente = rs.getInt("idcliente");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    Basededatos.desconectar();
                }
            }
            double consignacion = Double.parseDouble(txtconsignacioncliente.getText());

            java.util.Date utilDate = new java.util.Date();
            Date sqlDate = new Date(utilDate.getTime());
            /////////////////////////////////////////////////////////////

            double total = Double.parseDouble(lbltotal.getText());
            ////////////////////////////////////////////////////////////////////
            double devolucion = consignacion - total;
            jTextPane1.setText("TotalVenta:" + String.valueOf(total)
                    + "\nConsignacion:" + String.valueOf(consignacion)
                    + "\nDevolucion:" + String.valueOf(consignacion - total)
                    + "\nCodigoFactura:" + codigoFactura
                    + "\nFechaVenta:" + sqlDate.toString()
                    + "\nCliente:" + alojf);
            if (Basededatos.conectar() != null) {
                if (new ClaseEstado().estadoReg() == true && !"".equals(codigoFactura)) {

                    try {

                        PreparedStatement ps = Basededatos.conn.
                                prepareStatement(sqlinsertventas);

                        ps.setString(1, codigoFactura);
                        ps.setDouble(2, total);
                        ps.setDate(3, sqlDate);
                        ps.setDouble(4, consignacion);
                        ps.setDouble(5, devolucion);
                        ps.setInt(6, idcliente);
                        ps.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(Producto.class
                                .getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        Basededatos.desconectar();

                    }

                }
            }
            if (Basededatos.conectar() != null) {

                if (new ClaseEstado().estadoReg() == true && !"".equals(codigoFactura)) {

                    try {
                        int i = 1;
                        for (DetalleVenta c : ldv) {

                            PreparedStatement ps = Basededatos.conn.
                                    prepareStatement(sqlinsetvdetalleventas);

                            ps.setInt(1, c.getCantidadDetalle());
                            ps.setDouble(2, c.getSubtotal());
                            ps.setInt(3, c.getProducto_idproducto());
                            ps.setString(4, c.getVentas_codigoVentas());

                            ps.executeUpdate();
                            PreparedStatement ps2 = Basededatos.conn.
                                    prepareStatement(sqlupdateproducto);
                            ps2.setInt(1, c.getCantidadDetalle());
                            ps2.setInt(2, c.getProducto_idproducto());
                            ps2.executeUpdate();
                            i++;
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Producto.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }

                }

            }

            try {
                this.stop();

            } catch (Exception ex) {
                Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }
}
