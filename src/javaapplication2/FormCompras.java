/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.awt.Color;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class FormCompras extends javax.swing.JFrame implements ItfFrmCompras{

    private Basededatos bd = Basededatos.getInstance();
    private static List<DetalleCompra> ldc = new LinkedList<>();
    private final DefaultTableModel modelo = new DefaultTableModel();
    private double total = 0.0;
    private String codigoFactura = "";
    private static final String mostarprodsql = "Select nombre from producto";
    private static final String mostarproveesql = "Select nombre from proveedor";
    private static final String mensaje = "error en el envio o procesamiento de los parametros";
    
    @Override
    public void setLdc(List<DetalleCompra> ldc) {
        FormCompras.ldc = ldc;
    }

    /**
     * Creates new form FromCompras
     */
    public FormCompras() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        listprod hy = new listprod();
        hy.start();

        modelo.addColumn("Producto");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Subtotal");
        modelo.addColumn("Proveedor");
        jTable1.setModel(modelo);
        listarprovee vq = new listarprovee();
        vq.start();

        AutoCompleteDecorator.decorate(jComboBox1);
        AutoCompleteDecorator.decorate(jComboBox2);
    }

    private class listprod extends Thread {

        public listprod() {
        }

        @Override
        public void run() {
            try {
                if (bd.conectar() != null) {
                    try {

                        Statement ps = bd.conn.createStatement();
                        ResultSet rs = ps.executeQuery(mostarprodsql);
                        while (rs.next()) {
                            jComboBox1.addItem(rs.getString("nombre"));
                        }

                        //la lista
                    } catch (SQLException ew) {
                        System.out.println(ew);
                    } finally {
                        bd.desconectar();
                    }
                }
                try {
                    this.stop();

                } catch (Exception qza) {
                    Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, qza);
                }

            } catch (Exception tr) {
                Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, tr);
            }
        }
    }

    private class listarprovee extends Thread {

        public listarprovee() {
        }

        @Override
        public void run() {
            try {
                if (bd.conectar() != null) {
                    try {

                        Statement ps = bd.conn.createStatement();
                        ResultSet rs = ps.executeQuery(mostarproveesql);
                        while (rs.next()) {
                            jComboBox2.addItem(rs.getString("nombre"));

                        }

                        //la lista
                    } catch (SQLException eq) {
                        System.out.println(eq);
                    } finally {
                        bd.desconectar();
                    }
                }
                try {
                    this.stop();

                } catch (Exception qwz) {
                    Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, qwz);
                }

            } catch (Exception tr) {
                Logger.getLogger(FormCompras.class.getName()).log(Level.SEVERE, null, tr);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lbltotal = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compras");
        setEnabled(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/transfer_77884.png"))); // NOI18N
        jButton1.setText("Proveedores");
        jButton1.setToolTipText("Se Procedera A Ir Al Formulario Proveedores");
        jButton1.setDoubleBuffered(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/transfer_77884.png"))); // NOI18N
        jButton2.setText("Inventario");
        jButton2.setToolTipText("Se Procedera A Ir Al Formulario Inventario");
        jButton2.setDoubleBuffered(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Producto Existente:");
        jLabel1.setDoubleBuffered(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        jComboBox1.setDoubleBuffered(true);
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox1KeyTyped(evt);
            }
        });

        jLabel2.setText("Cantidad:");
        jLabel2.setDoubleBuffered(true);

        jTextField1.setText("0.0");
        jTextField1.setDoubleBuffered(true);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField2.setText("0");
        jTextField2.setDoubleBuffered(true);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel3.setText("Valor Unitario:");
        jLabel3.setDoubleBuffered(true);

        jLabel4.setText("Proveedor:");
        jLabel4.setDoubleBuffered(true);

        jComboBox2.setDoubleBuffered(true);
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox2KeyTyped(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/shoppingcart_77905.png"))); // NOI18N
        jButton3.setText("Agregar");
        jButton3.setToolTipText("Se Agregaran Unidades Al Carrito De Compras");
        jButton3.setDoubleBuffered(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/archives_78380.png"))); // NOI18N
        jButton4.setText("Actualizar ");
        jButton4.setToolTipText("Se Procedera A Actualizar Carrito");
        jButton4.setDoubleBuffered(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTable1);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/hand-shopping-bag_46878.png"))); // NOI18N
        jButton5.setText("Comprar");
        jButton5.setToolTipText("Se Contabilizaran Las Unidades Registradas");
        jButton5.setDoubleBuffered(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel5.setText("Total:");
        jLabel5.setDoubleBuffered(true);

        lbltotal.setText("0.0");
        lbltotal.setDoubleBuffered(true);
        lbltotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lbltotalKeyTyped(evt);
            }
        });

        jTextField3.setDoubleBuffered(true);
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jLabel7.setText("Factura:");
        jLabel7.setDoubleBuffered(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(lbltotal)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DetalleCompra dc = new DetalleCompra();
        double subtotal = 0.0;
        String proveed = jComboBox2.getSelectedItem().toString();
        String nombreprod = jComboBox1.getSelectedItem().toString();
        codigoFactura = jTextField3.getText();
        int idproducto = 0;
        int idproveedor = 0;

        if (bd.conectar() != null) {
            try {
                String sql = "Select idproducto from Producto where nombre ='" + nombreprod + "'";

                Statement ps = bd.conn.createStatement();
                ResultSet rs = ps.executeQuery(sql);

                while (rs.next()) {

                    idproducto = rs.getInt("idProducto");
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            } finally {
                bd.desconectar();
            }
        }
        if (bd.conectar() != null) {
            try {
                String sqlprovee = "Select idproveedor from proveedor where nombre ='" + proveed + "'";

                Statement psprovee = bd.conn.createStatement();
                ResultSet rsprovee = psprovee.executeQuery(sqlprovee);

                while (rsprovee.next()) {

                    idproveedor = rsprovee.getInt("idproveedor");
                }

            } catch (SQLException ex) {
                System.out.println(ex);
            } finally {
                bd.desconectar();
            }
        }
        if (idproducto > 0 && idproveedor > 0 && !"".equals(codigoFactura) && nombreprod != "") {
            int cant = Integer.parseInt(jTextField2.getText());

            subtotal = (Double.parseDouble(jTextField1.getText()) * cant);

            Object[] dato1 = new Object[]{
                nombreprod,
                cant,
                subtotal,
                jComboBox2.getSelectedItem().toString()};
            modelo.addRow(dato1);
            jTable1.setModel(modelo);
            total = total + subtotal;
            lbltotal.setText(String.valueOf(total));
            //////////////////////////////////////////////////////////
            dc = new DetalleCompra(cant, subtotal, idproducto, nombreprod, codigoFactura, idproveedor, proveed);
            if (dc instanceof DetalleCompra) {
                ldc.add(dc);
            }

            /////////////////////////////////////////////////////////////
        } else {
            JOptionPane.showMessageDialog(null, mensaje, "error", 0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        total = 0.0;
        String fat = null;
        if (ldc instanceof DetalleCompra) {
            for (DetalleCompra c : ldc) {
                Object[] dato1 = new Object[]{
                    c.getNombreproduc(),
                    c.getCantidadDetalle(),
                    c.getSubtotal(),
                    c.getNombreprovee()};
                modelo.addRow(dato1);
                total = total + c.getSubtotal();
                fat = c.getCompra_codigoCompra();
            }
        }
        codigoFactura = fat;
        jTextField3.setText(fat);
        jTable1.setModel(modelo);
        lbltotal.setText(String.valueOf(total));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setEnabled(false);
        this.setVisible(false);
        FrmInventario frt = new FrmInventario();
        frt.setEnabled(true);
        frt.setVisible(true);
           if (ldc instanceof DetalleCompra) {
        frt.setLdcfinal(ldc);
           }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        RegistroCompra er = new RegistroCompra();
        er.start();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setEnabled(false);
        this.setVisible(false);
        FrmProveedor frt = new FrmProveedor();
        frt.setEnabled(true);
        frt.setVisible(true);
           if (ldc instanceof DetalleCompra) {
        frt.setLdcfinal(ldc);
           }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        evalnumdec(evt);
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        evalnum(evt);
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jComboBox2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_jComboBox2KeyTyped

    private void jComboBox1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_jComboBox1KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // TODO add your handling code here:
        evaltextYnum(evt);
    }//GEN-LAST:event_jTextField3KeyTyped

    private void lbltotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbltotalKeyTyped
        // TODO add your handling code here:
        evalnumdec(evt);
    }//GEN-LAST:event_lbltotalKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        FrmPrincipal frd = new FrmPrincipal();
        frd.setEnabled(true);
        frd.setVisible(true);
        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosed
   @Override
    public void evaltextYnum(java.awt.event.KeyEvent tyea) {
        char c = tyea.getKeyChar();
        if ((c < '0' || c > '9') & (c < 'A' || c > 'Z') & (c < 'a' || c > 'z') & (c < '.' || c > '.') & (c < ' ' || c > ' ')) {
            tyea.consume();
        }
    }
   @Override
    public void evalnum(java.awt.event.KeyEvent ohynu) {
        char c = ohynu.getKeyChar();
        if ((c < '0' || c > '9')) {
            ohynu.consume();
        }
    }
   @Override
    public void evalnumdec(java.awt.event.KeyEvent ohynu) {
        char c = ohynu.getKeyChar();
        if ((c < '0' || c > '9') & (c < '.' || c > '.')) {
            ohynu.consume();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lbltotal;
    // End of variables declaration//GEN-END:variables

    private class RegistroCompra extends Thread {

        private static final String sqlinsertcompra = "insert into compra(codigoCompra,total,fechaCompra) values(?,?,?)";
        private static final String sqldetallecompra = "insert into detalleCompra(cantidadDetalle,subtotal,producto_idproducto,compra_codigoCompra,proveedor_idproveedor) values(?,?,?,?,?)";
        private static final String sqlupdateproducto = "update producto set  stock=?+stock where idproducto=?";

        public RegistroCompra() {
        }

        @Override
        public void run() {

            try {
                if (ldc.size() > 0) {
                    if(ldc instanceof DetalleCompra){
                    int ldcfil = ldc.size() + 4;
                    String[][] content1 = new String[ldcfil][4];
                    content1[0][0] = "Nombre";
                    content1[0][1] = "Cantidad";
                    content1[0][2] = "valor";
                    content1[0][3] = "Proveedor";
                    java.util.Date utilDate = new java.util.Date();
                    Date sqlDate = new Date(utilDate.getTime());
                    if (bd.conectar() != null) {
                        if (new ClaseEstado().estadoReg() == true && !"".equals(codigoFactura)) {

                            try {

                                PreparedStatement ps = bd.conn.
                                        prepareStatement(sqlinsertcompra);

                                ps.setString(1, codigoFactura);
                                ps.setDouble(2, total);
                                ps.setDate(3, sqlDate);
                                ps.executeUpdate();

                            } catch (SQLException ex) {
                                System.out.println(ex);
                            } finally {
                                bd.desconectar();
                            }

                        }
                    }
                    if (bd.conectar() != null) {
                        if (new ClaseEstado().estadoReg() == true && !"".equals(codigoFactura)) {

                            try {
                                int i = 1;
                                for (DetalleCompra c : ldc) {
                                    PreparedStatement ps = bd.conn.
                                            prepareStatement(sqldetallecompra);

                                    ps.setInt(1, c.getCantidadDetalle());
                                    ps.setDouble(2, c.getSubtotal());
                                    ps.setInt(3, c.getProducto_idproducto());
                                    ps.setString(4, c.getCompra_codigoCompra());
                                    ps.setInt(5, c.getIdproveedor());
                                    ps.executeUpdate();

                                    content1[i][0] = "" + c.getNombreproduc();
                                    content1[i][1] = "" + c.getCantidadDetalle();
                                    content1[i][2] = "" + c.getSubtotal();
                                    content1[i][3] = "" + c.getNombreprovee();

                                    PreparedStatement ps2 = bd.conn.
                                            prepareStatement(sqlupdateproducto);
                                    ps2.setInt(1, c.getCantidadDetalle());
                                    ps2.setInt(2, c.getProducto_idproducto());
                                    ps2.executeUpdate();
                                    i++;
                                }
                                content1[i][0] = "";
                                content1[i][1] = "";
                                content1[i][2] = "Total";
                                content1[i][3] = String.valueOf(total);

                                content1[i + 1][0] = "";
                                content1[i + 1][1] = "";
                                content1[i + 1][2] = "codigoFactura";
                                content1[i + 1][3] = codigoFactura;

                                content1[i + 2][0] = "";
                                content1[i + 2][1] = "";
                                content1[i + 2][2] = "Fecha";
                                content1[i + 2][3] = sqlDate.toString();

                            } catch (SQLException wr) {
                                System.out.println(wr);
                            } finally {
                                bd.desconectar();
                                ldc.clear();
                                ClaseMensaje.miMensajeAprovado();
                            }

                        }
                    }
                    PDDocument doc = new PDDocument();
                    try {
                        PDPage page = new PDPage();
                        doc.addPage(page);

                        try ( PDPageContentStream contentStream = new PDPageContentStream(doc, page)) {

                            drawTable(page, contentStream, 700.0f, 100.0f, content1);
                        }
                        String ruta = System.getProperty("user.home");
                        doc.save(ruta + "/Desktop/compra.pdf");
                    } catch (IOException hg) {
                        System.out.println(hg);
                    }
                }
                } else {
                    JOptionPane.showMessageDialog(null, "carrito vacio", "mensaje", 2);
                }
                try {
                    this.stop();

                } catch (Exception qza) {
                    System.out.println(qza);
                }

            } catch (Exception tr) {
                System.out.println(tr);
            }
        }

    }

    protected static void drawTable(PDPage page, PDPageContentStream contentStream,
            float y, float margin, String[][] content) throws IOException {
        final int rows = content.length;
        final int cols = content[0].length;
        final float rowHeight = 20.0f;
        final float tableWidth = page.getMediaBox().getWidth() - 2.0f * margin;
        final float tableHeight = rowHeight * (float) rows;
        final float colWidth = tableWidth / (float) cols;

        //draw the rows
        float nexty = y;
        for (int i = 0; i <= rows; i++) {
            contentStream.moveTo(margin, nexty);
            contentStream.lineTo(margin + tableWidth, nexty);
            contentStream.stroke();
            nexty -= rowHeight;
        }

        //draw the columns
        float nextx = margin;
        for (int i = 0; i <= cols; i++) {
            contentStream.moveTo(nextx, y);
            contentStream.lineTo(nextx, y - tableHeight);
            contentStream.stroke();
            nextx += colWidth;
        }

        //now add the text
        contentStream.setFont(PDType1Font.HELVETICA_BOLD, 12.0f);

        final float cellMargin = 5.0f;
        float textx = margin + cellMargin;
        float texty = y - 15.0f;
        for (final String[] aContent : content) {
            for (String text : aContent) {
                contentStream.beginText();
                contentStream.newLineAtOffset(textx, texty);
                contentStream.showText(text);
                contentStream.endText();
                textx += colWidth;
            }
            texty -= rowHeight;
            textx = margin + cellMargin;
        }
    }
}
